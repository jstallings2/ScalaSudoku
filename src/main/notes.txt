Notes on Scala:

- Scala uses () instead of [] for array indexing

- Function parameters are like (row: Int) instead of (int row)

- Scala infers types. Use var for variables and val instead for anything you would make const

- "Unit =" is the same as saying "void"

- for loop : for(i <- 0 until 10) will go from 0 to 9 ("until" is like <, "to" is like <=)

- return is usually redundant in Scala, the last line of any method gets returned automatically

- Stacks are deprecated in Scala nowadays. I used a List instead because apparently a Scala stack
    is just a wrapper around a List. Peep the answer on this StackOverflow post where they replace push() and pop()
    with two list operations:
    https://stackoverflow.com/questions/43866787/scala-2-12-tells-me-stack-is-deprecated-how-to-replace-it-exactly-and-why-i-do
    We use a mutable.List as a Stack with

    elem +: list - prepends elem to list (like push)
    list.head - returns the first element of list (like pop)

    This way we still get the FIFO behavior we want



Steps

1. For now, Intialize a hard-coded board (working)

2. Load board from file (see loadFromFile, almost there)

3. Display board (mostly to make sure initalizing the board works)

4. Row, column, and subsquare checks

5. Solver